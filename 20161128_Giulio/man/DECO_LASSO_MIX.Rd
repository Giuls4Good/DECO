% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DECO_MIX.R
\name{DECO_LASSO_MIX}
\alias{DECO_LASSO_MIX}
\title{DECO Parallelized Algorithm (Mixture of R and C++)}
\usage{
DECO_LASSO_MIX(Y, X, p = NULL, n = NULL, m = 1, lambda, r_1, r_2 = r_1,
  ncores = 1, intercept = TRUE, refinement = TRUE)
}
\arguments{
\item{Y}{gives the nx1 vector of observations we wish to approximate with a linear model of type Y = Xb + e.}

\item{X}{gives the nxp matrix of regressors, each column corresponding to a different regressor.}

\item{p}{is the column dimension of X [equivalently, p is the number of regressor variables].
If not given, it is computed as the number of columns of X.}

\item{n}{is the row dimension of X (and Y) [equivalently, n is the number of observations/individuals].
If not given, it is computed as the number of rows of X.}

\item{m}{is the number of groups/blocks you wish to split X into, denoted X(i) for 1 <= i <= m.}

\item{lambda}{gives the (fixed) penalty magnitude in the LASSO fit of the algorithm.}

\item{r_1}{is a tweaking parameter for making the inverse more robust (as we take inverse of XX + r_1*I).}

\item{r_2}{is a tweaking parameter for making the inverse more robust (as we take inverse of X_MX_M + r_2*I).}

\item{ncores}{determines the number of cores used on each machine to parallelize computation.}

\item{intercept}{determines whether to include an intercept in the model or not.}

\item{refinement}{determines whether to include the refinement step (Stage 3 of the algorithm).}
}
\description{
This implements the algorithm DECO using a mixture of R and C++ code.
}
\details{
This implements the algorithm DECO which was introducted in "DECOrrelated feature space partitioning
for distributed sparse regression" by Wang, Dunson, and Leng (2016). It assumes that we take the lasso to be the penalized
regression scehme.
}
\note{
-This implementation uses both R functions and C++ functions. In particular, \code{standardizeMatrix},
\code{invSymmMatrix}, \code{squareRootSymmetric} functions are used when needed in place of native R functions.
Higher speed can be achieved by using other functions provided in the package.

-This implementation is suboptimal in that X is already stored in the memory when we start the procedure.
      Ideally, one would give in only the LOCATION X is stored at and read it in chunkwise (thus allowing for
      larger matrices X, as was intended by the authors).
}
\author{
Samuel Davenport, Jack Carter, Giulio Morina, Jeremias Knoblauch
}

